# PipeCraft Configuration
# Trunk-based development workflow automation
# https://docs.pipecraft.dev

# CI/CD Platform
ciProvider: github

# Merge strategy for automatic promotions
# fast-forward: Clean linear history (recommended)
# merge: Creates merge commits
mergeStrategy: fast-forward

# Enforce conventional commit messages (feat:, fix:, etc.)
requireConventionalCommits: true

# Branch flow configuration
initialBranch: develop  # Where features land
finalBranch: main       # Production branch

# Promotion flow: develop → staging → main
branchFlow:
  - develop  # Feature integration and initial testing
  - staging  # Pre-production validation
  - main     # Production releases

# Automatic promotion after successful tests
autoMerge:
  staging: true  # Auto-promote develop → staging
  main: true     # Auto-promote staging → main

# Semantic versioning rules
semver:
  bumpRules:
    feat: minor      # New features bump minor version (1.x.0)
    fix: patch       # Bug fixes bump patch version (1.0.x)
    breaking: major  # Breaking changes bump major version (x.0.0)

# Domain definitions - what parts of your codebase trigger which jobs
domains:
  core:
    # Source code and tests
    paths:
      - src/**
      - tests/**
    testable: true        # Run tests when changed
    deployable: true      # Deploy when changed
    remoteTestable: true  # Run remote/integration tests
    description: PipeCraft core changes

  cicd:
    # CI/CD configuration changes
    paths:
      - .github/**
    testable: true
    description: PipeCraft CI/CD changes

  docs:
    # Documentation and website
    paths:
      - docs/**
      - docs-site/**
    testable: true
    deployable: true
    description: Documentation changes

# Version calculation and release automation
versioning:
  enabled: true
  releaseItConfig: .release-it.cjs
  conventionalCommits: true  # Use conventional commits for version bumps
  autoTag: true              # Automatically create git tags
  autoPush: false            # Manual control over git push
  changelog: true            # Generate CHANGELOG.md
  bumpRules:
    feat: minor
    fix: patch
    breaking: major

# Workflow rebuild optimization
rebuild:
  enabled: true           # Enable smart rebuild detection
  skipIfUnchanged: true   # Skip regeneration if config hasn't changed
  forceRegenerate: false  # Force regenerate even if unchanged
  cacheFile: .pipecraft-cache.json

