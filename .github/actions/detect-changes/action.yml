name: 'Detect Changes'
description: 'Detect changes in different application domains based on file paths'
author: 'Pipecraft'

inputs:
  baseRef:
    description: 'Base reference to compare against'
    required: false
    default: 'main'

outputs:
  core:
    description: 'Whether core domain has changes'
    value: ${{ steps.merge.outputs.core }}
  test:
    description: 'Whether test domain has changes'
    value: ${{ steps.merge.outputs.test }}
  cicd:
    description: 'Whether cicd domain has changes'
    value: ${{ steps.merge.outputs.cicd }}
  docs:
    description: 'Whether docs domain has changes'
    value: ${{ steps.merge.outputs.docs }}

runs:
  using: 'composite'
  steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set Base Branch
      id: set-base
      shell: bash
      run: |
        base_branch=${{ inputs.baseRef || 'main' }}
        echo "base_branch=$base_branch" >> $GITHUB_OUTPUT
        echo "base_branch=$base_branch" >> $GITHUB_ENV

    - name: Detect Changes
      uses: dorny/paths-filter@v3
      id: filter
      with:
        base: ${{ steps.set-base.outputs.base_branch }}
        filters: |
          core:
            - 'src/**'
          test:
            - 'tests/**'
          cicd:
            - '.github/**'
          docs:
            - 'docs/**'
            - 'docs-site/**'

    - name: Merge filter outputs
      id: merge
      shell: bash
      run: |
        echo "core=${{ contains(steps.filter.outputs.changes, 'core') }}" >> $GITHUB_OUTPUT
        echo "test=${{ contains(steps.filter.outputs.changes, 'test') }}" >> $GITHUB_OUTPUT
        echo "cicd=${{ contains(steps.filter.outputs.changes, 'cicd') }}" >> $GITHUB_OUTPUT
        echo "docs=${{ contains(steps.filter.outputs.changes, 'docs') }}" >> $GITHUB_OUTPUT
        
        echo "ðŸ“‹ Change Detection Results:"
        echo "  core: ${{ contains(steps.filter.outputs.changes, 'core') }}"
        echo "  test: ${{ contains(steps.filter.outputs.changes, 'test') }}"
        echo "  cicd: ${{ contains(steps.filter.outputs.changes, 'cicd') }}"
        echo "  docs: ${{ contains(steps.filter.outputs.changes, 'docs') }}"