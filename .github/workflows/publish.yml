name: Publish to npm

run-name: 'Publish ${{ github.event.release.tag_name || inputs.tag }}'

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag to publish (e.g., v1.2.3)'
        required: true
        type: string

permissions:
  contents: read
  id-token: write  # Required for OIDC

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name || inputs.tag }}
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build package
        run: pnpm run build

      - name: Set package version
        run: |
          TAG=${{ github.event.release.tag_name || inputs.tag }}
          VERSION=${TAG#v}  # Remove 'v' prefix
          echo "Setting package version to $VERSION"
          # Use npm pkg to set version without modifying lockfiles
          npm pkg set version=$VERSION

      - name: Debug OIDC and npm context
        run: |
          echo "=== GitHub Context ==="
          echo "Event name: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Run ID: ${{ github.run_id }}"
          echo "Actor: ${{ github.actor }}"
          echo ""
          echo "=== Checking npm authentication (expected to fail - OIDC only works during publish) ==="
          npm whoami || echo "Not authenticated (this is normal with OIDC)"
          echo ""
          echo "=== Registry info ==="
          npm config get registry
          echo ""
          echo "=== OIDC Token Info ==="
          echo "ACTIONS_ID_TOKEN_REQUEST_URL: ${ACTIONS_ID_TOKEN_REQUEST_URL:-not set}"
          echo "ACTIONS_ID_TOKEN_REQUEST_TOKEN: ${ACTIONS_ID_TOKEN_REQUEST_TOKEN:+SET}"

      - name: Publish to npm with verbose logging
        run: |
          echo "=== Starting publish with maximum verbosity ==="
          npm publish --provenance --access public --loglevel silly 2>&1 | tee npm-publish.log || true
          echo "=== Publish exit code: $? ==="
          echo "=== Full log above ==="
