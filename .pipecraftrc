# PipeCraft Configuration
# Trunk-based development workflow automation
# https://pipecraft.thecraftlab.dev

# CI/CD Platform
ciProvider: github

# Merge strategy for automatic promotions
# Options: 'fast-forward' (clean linear history, recommended) | 'merge' (creates merge commits)
mergeStrategy: fast-forward

# Enforce conventional commit messages (feat:, fix:, etc.)
requireConventionalCommits: true

# Branch flow configuration
initialBranch: develop  # Where features land
finalBranch: main       # Production branch

# Promotion flow: develop → staging → main
branchFlow:
  - develop  # Feature integration and initial testing
  - staging  # Pre-production validation
  - main     # Production releases

# Automatic promotion after successful tests
autoMerge:
  staging: true  # Auto-promote develop → staging
  main: true     # Auto-promote staging → main

# Semantic versioning rules
# Prefixes are used to determine the type of change and the version bump level
semver:
  bumpRules:
    test: 'ignore'
    build: 'ignore'
    ci: 'patch'
    docs: 'patch'
    style: 'patch'
    fix: 'patch'
    perf: 'patch'
    refactor: 'patch'
    chore: 'patch'
    patch: 'patch'
    feat: 'minor'
    minor: 'minor'
    major: 'major'
    breaking: 'major'

# Domain definitions - what parts of your codebase trigger which jobs
# Will create placeholder jobs for each domain if no jobs are defined in the pipeline.yml
domains:
  core:
    # Source code and tests
    paths:
      - src/**
      - tests/**
    prefixes: ['test', 'deploy', 'remote-test']
    description: PipeCraft core changes

  cicd:
    # CI/CD configuration changes
    paths:
      - .github/**
    prefixes: ['test', 'deploy', 'remote-test']
    description: PipeCraft CI/CD changes

  docs:
    # Documentation and website
    paths:
      - docs/**
      - docs-site/**
    prefixes: ['test', 'deploy', 'remote-test']
    description: Documentation changes

# Version calculation and release automation
versioning:
  enabled: true
  releaseItConfig: .release-it.cjs
  conventionalCommits: true  # Use conventional commits for version bumps
  autoTag: true              # Automatically create git tags
  autoPush: false            # Manual control over git push
  changelog: true            # Generate CHANGELOG.md
  bumpRules:
    feat: minor
    fix: patch
    breaking: major

# Workflow rebuild optimization
rebuild:
  enabled: true           # Enable smart rebuild detection
  skipIfUnchanged: true   # Skip regeneration if config hasn't changed
  forceRegenerate: false  # Force regenerate even if unchanged
  cacheFile: .pipecraft-cache.json

