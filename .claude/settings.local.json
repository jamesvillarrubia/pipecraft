{
  "permissions": {
    "allow": [
      "Bash(test:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nrefactor: rename project from FlowCraft to PipeCraft\n\nRename the entire project to PipeCraft to better align with the -craft naming convention (matching pullcraft). The new name emphasizes pipeline crafting and CI/CD automation.\n\nChanges:\n- Rename package from ''flowcraft'' to ''pipecraft''\n- Rename CLI command from ''flowcraft'' to ''pipecraft''\n- Rename config file from .flowcraftrc.json to .pipecraftrc.json\n- Update all documentation and branding\n- Update all source code references\n- Update all test files\n- Update all script files\n- Update GitHub Actions setup messaging\n\nThe functionality remains identical - only the branding has changed.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git rev-parse:*)",
      "Bash(gh run list:*)",
      "Bash(gh workflow list:*)",
      "Bash(gh run view:*)",
      "Bash(git fetch:*)",
      "Bash(pnpm build)",
      "Bash(node:*)",
      "Bash(pnpm pipecraft generate:*)",
      "Bash(git restore:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: add per-branch autoMerge configuration for hybrid manual/auto workflow\n\nAdd support for configurable auto-merge behavior per target branch, allowing\nteams to choose when to automatically fast-forward branches vs requiring manual\nPR review.\n\nChanges:\n- Add autoMerge config option supporting both boolean and per-branch object\n- Update pipeline template to conditionally generate branch job based on config\n- Add branch output to manage-branch action for workflow triggering\n- Implement workflow dispatch triggering to run pipeline on target branch\n- Add logic to remove branch job when autoMerge is disabled\n\nConfiguration:\n- Set autoMerge per target branch in .pipecraftrc.json\n- Example: { \"staging\": true, \"main\": false }\n- Enables auto-merge to staging, manual review for production\n\nWorkflow behavior:\n- When autoMerge enabled: creates PR + auto fast-forward + triggers workflow\n- When autoMerge disabled: creates PR + waits for manual merge (human merge triggers workflow)\n- Uses GITHUB_TOKEN with gh workflow run (no PAT needed)\n- Branch job includes conditional if statement based on source branch\n\nThis solves the issue where GITHUB_TOKEN pushes don''t trigger workflows by\nexplicitly triggering them, while maintaining flexibility for manual review\nwhen needed (e.g., before production deploys).\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "Bash(git commit:*)",
      "Bash(gh pr list:*)",
      "Bash(cat:*)",
      "Read(//private/tmp/**)",
      "Bash(pnpm test:*)",
      "Bash(/dev/null)",
      "Bash(gh api:*)",
      "Bash(gh pr merge:*)",
      "Bash(xargs -I {} git show {}:.github/workflows/pipeline.yml)",
      "Bash(git checkout:*)",
      "Bash(npm test)",
      "Bash(pkill:*)",
      "Bash(npm run build)",
      "Bash(npm test:*)",
      "Bash(for i in {1..20})",
      "Bash(do sleep 1)",
      "Bash(if ps aux)",
      "Bash(then echo \"Still running...\")",
      "Bash(else echo \"Done!\")",
      "Bash(break)",
      "Bash(fi)",
      "Bash(done)",
      "Read(//tmp/**)",
      "Bash(npm pack:*)",
      "Bash(awk:*)",
      "Bash(tee:*)",
      "Bash(killall node:*)",
      "Bash(killall:*)",
      "Bash(pnpm pipecraft:*)",
      "Bash(pnpm test:unit:*)",
      "Bash(timeout 120 pnpm test:*)",
      "Bash(pgrep:*)",
      "Read(//dev/**)",
      "Bash(pnpm test:coverage:*)",
      "Bash(LOG_LEVEL=verbose pnpm test:*)"
    ],
    "deny": [],
    "ask": []
  }
}
